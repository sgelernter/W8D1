continue
exit
req
req.cookies['_rails_lite_app']
req.cookies[:_rails_lite_app]
cookies = req.cookies
req.cookies('_rails_lite_app')
req.cookies
req.cookie_hash
req
exit
full_path
exit
top_path
c
exit
disp already_built_response
disp @already_built_response
c
n
disp @already_built_response
c
exit
c
exit
@already_build_response
already_built_response
c
exit
n
s
n
c
n
cats_controller2.already_built_response
n
s
n
disp @already_built_response
undisp 1
disp already_built_response
template_name
exit
n
disp cats_controller2.already_built_response?
exit
disp already_built_response?
c
exit
cl
self.class
self
@already_built_response
already_built_response
n
already_built_response
c
exit
cl
already_build_response
n
already_built_response
already_build_response
c
already_built_response
exit
ERB.new(x).result(binding)
ERB.new(x).result
ERB.new(x)
x = File.read(full_path)
File.read(full_path)
full_path
exit
self.class.underscore
template_name
self.class.to_s.underscore
self.class.to_s
self.class
self.name
self
res.body
req.body
req.head
req.header
req.path
res.path
exit
res.body << content
content_type
res.body = [content]
res.body
content_type
content
continue
exit
res.header
res.set_header('status', 203)
res.header
res.add_header(:status, 302)
res.add_header(status: 302)
res.add_header(status)
req.has_header?
res
res.has_header?
res.set_header(status, 302)
res.set_header(status: 302)
res.header
url
req.url
req.path
req
url
c
req.head?
req.base_url
req.fullpath
req.path
c
req.fullpath
req.path
res.params
req.body
req.params
req
res
c
exit
cl
res
n
res
s
env
c
res
n
env
